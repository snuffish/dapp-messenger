/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Messenger, MessengerInterface } from "../Messenger";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    inputs: [],
    name: "destroy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "messageId",
        type: "uint256",
      },
    ],
    name: "getMessages",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
        ],
        internalType: "struct Message",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messages",
    outputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d4f806100656000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630d80fefd1461005c57806383197ef01461008d5780638da5cb5b14610097578063ae36853d146100b5578063de6f24bb146100e5575b600080fd5b61007660048036038101906100719190610570565b610101565b60405161008492919061066e565b60405180910390f35b6100956101cd565b005b61009f610294565b6040516100ac919061069e565b60405180910390f35b6100cf60048036038101906100ca9190610570565b6102b8565b6040516100dc919061074f565b60405180910390f35b6100ff60048036038101906100fa91906108d2565b6103cd565b005b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461014a9061095d565b80601f01602080910402602001604051908101604052809291908181526020018280546101769061095d565b80156101c35780601f10610198576101008083540402835291602001916101c3565b820191906000526020600020905b8154815290600101906020018083116101a657829003601f168201915b5050505050905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610252906109da565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102c06104f6565b600260008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546103449061095d565b80601f01602080910402602001604051908101604052809291908181526020018280546103709061095d565b80156103bd5780601f10610392576101008083540402835291602001916103bd565b820191906000526020600020905b8154815290600101906020018083116103a057829003601f168201915b5050505050815250509050919050565b600160008154809291906103e090610a29565b9190505550600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018381525090508060026000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816104869190610c1d565b509050508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8e3ce0a37f42bfb0e85f8f02c440ff2843d1182d7f1fce9174f7980e5e9d130c6001546040516104e99190610cfe565b60405180910390a3505050565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61054d8161053a565b811461055857600080fd5b50565b60008135905061056a81610544565b92915050565b60006020828403121561058657610585610530565b5b60006105948482850161055b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c88261059d565b9050919050565b6105d8816105bd565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106185780820151818401526020810190506105fd565b60008484015250505050565b6000601f19601f8301169050919050565b6000610640826105de565b61064a81856105e9565b935061065a8185602086016105fa565b61066381610624565b840191505092915050565b600060408201905061068360008301856105cf565b81810360208301526106958184610635565b90509392505050565b60006020820190506106b360008301846105cf565b92915050565b6106c2816105bd565b82525050565b600082825260208201905092915050565b60006106e4826105de565b6106ee81856106c8565b93506106fe8185602086016105fa565b61070781610624565b840191505092915050565b600060408301600083015161072a60008601826106b9565b506020830151848203602086015261074282826106d9565b9150508091505092915050565b600060208201905081810360008301526107698184610712565b905092915050565b61077a816105bd565b811461078557600080fd5b50565b60008135905061079781610771565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107df82610624565b810181811067ffffffffffffffff821117156107fe576107fd6107a7565b5b80604052505050565b6000610811610526565b905061081d82826107d6565b919050565b600067ffffffffffffffff82111561083d5761083c6107a7565b5b61084682610624565b9050602081019050919050565b82818337600083830152505050565b600061087561087084610822565b610807565b905082815260208101848484011115610891576108906107a2565b5b61089c848285610853565b509392505050565b600082601f8301126108b9576108b861079d565b5b81356108c9848260208601610862565b91505092915050565b600080604083850312156108e9576108e8610530565b5b60006108f785828601610788565b925050602083013567ffffffffffffffff81111561091857610917610535565b5b610924858286016108a4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061097557607f821691505b6020821081036109885761098761092e565b5b50919050565b7f63616c6c6572206d757374206265206f776e6572000000000000000000000000600082015250565b60006109c46014836105e9565b91506109cf8261098e565b602082019050919050565b600060208201905081810360008301526109f3816109b7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a348261053a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6657610a656109fa565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ad37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610a96565b610add8683610a96565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610b1a610b15610b108461053a565b610af5565b61053a565b9050919050565b6000819050919050565b610b3483610aff565b610b48610b4082610b21565b848454610aa3565b825550505050565b600090565b610b5d610b50565b610b68818484610b2b565b505050565b5b81811015610b8c57610b81600082610b55565b600181019050610b6e565b5050565b601f821115610bd157610ba281610a71565b610bab84610a86565b81016020851015610bba578190505b610bce610bc685610a86565b830182610b6d565b50505b505050565b600082821c905092915050565b6000610bf460001984600802610bd6565b1980831691505092915050565b6000610c0d8383610be3565b9150826002028217905092915050565b610c26826105de565b67ffffffffffffffff811115610c3f57610c3e6107a7565b5b610c49825461095d565b610c54828285610b90565b600060209050601f831160018114610c875760008415610c75578287015190505b610c7f8582610c01565b865550610ce7565b601f198416610c9586610a71565b60005b82811015610cbd57848901518255600182019150602085019450602081019050610c98565b86831015610cda5784890151610cd6601f891682610be3565b8355505b6001600288020188555050505b505050505050565b610cf88161053a565b82525050565b6000602082019050610d136000830184610cef565b9291505056fea2646970667358221220f94562ade297faeaac45720f05da5d854f84d728615d57a575ba0b7d35e46bed64736f6c63430008110033";

type MessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Messenger__factory extends ContractFactory {
  constructor(...args: MessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Messenger> {
    return super.deploy(overrides || {}) as Promise<Messenger>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Messenger {
    return super.attach(address) as Messenger;
  }
  override connect(signer: Signer): Messenger__factory {
    return super.connect(signer) as Messenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessengerInterface {
    return new utils.Interface(_abi) as MessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Messenger {
    return new Contract(address, _abi, signerOrProvider) as Messenger;
  }
}
